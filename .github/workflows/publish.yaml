name: Publish Docker Image

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        pnpm-version: [9.x]
        chrome-version: [latest]

    steps:
      # Setup Environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup Node.js and pnpm
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      # Cache pnpm store
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v5

      # Install dependencies
      - name: Fetch dependencies
        run: pnpm fetch && pnpm install --offline

      # Build & Test
      - name: Build
        run: npm run build

      # Build Image
      - name: Docker meta
        id: build_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: floppybot/stream-source
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: '.'
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.build_meta.outputs.tags }}
          labels: ${{ steps.build_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
